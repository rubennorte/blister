{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/blister.js","src/errors.js","src/wrappers.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Blister","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"BlisterContainer","_deps","wrappers","errors","IllegalExtensionError","MissingExtendedDependencyError","VALUE","SINGLETON","FACTORY","prototype","constructor","get","id","wrapper","value","_set","factory","factoryFn","singleton","singletonFn","extend","definition","undefined","type","isExtension","TypeError","originalWrapper","create","register","provider","ErrorWrapper","message","name","container","cachedValue","cached"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar wrappers = require('./wrappers');\nvar errors = require('./errors');\n\nvar IllegalExtensionError = errors.IllegalExtensionError;\nvar MissingExtendedDependencyError = errors.MissingExtendedDependencyError;\n\nvar VALUE = 'VALUE';\nvar SINGLETON = 'SINGLETON';\nvar FACTORY = 'FACTORY';\n\n/**\n * Dependency injection container constructor\n *\n * @example\n * var container = new BlisterContainer();\n * container.value('id', 'value');\n * container.get('id'); //> 'value';\n *\n * @class\n */\nfunction BlisterContainer() {\n  this._deps = {};\n}\n\nBlisterContainer.IllegalExtensionError = IllegalExtensionError;\nBlisterContainer.MissingExtendedDependencyError = MissingExtendedDependencyError;\n\nBlisterContainer.prototype = {\n\n  constructor: BlisterContainer,\n\n  /**\n   * Returns the dependency set with the given id,\n   * or undefined if it is not present\n   * @param  {string} id\n   * @return {*}\n   */\n  get: function(id) {\n    var wrapper = this._deps[id];\n    return wrapper && wrapper();\n  },\n\n  /**\n   * Registers the given value with the specified id\n   * @param  {string} id\n   * @param  {*} value\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   */\n  value: function(id, value) {\n    return this._set(id, value, VALUE, false);\n  },\n\n  /**\n   * Registers the given factory function with the specified id\n   * @param  {string} id\n   * @param  {Function} factoryFn\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If factoryFn is not a function\n   */\n  factory: function(id, factoryFn) {\n    return this._set(id, factoryFn, FACTORY, false);\n  },\n\n  /**\n   * Registers the given singleton function with the specified id\n   * @param  {string} id\n   * @param  {Function} singletonFn\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If singletonFn is not a function\n   */\n  singleton: function(id, singletonFn) {\n    return this._set(id, singletonFn, SINGLETON, false);\n  },\n\n  /**\n   * Extends a previously defined dependency with the same type:\n   * factory or singleton\n   * @param  {string} id\n   * @param  {Function} definition\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If definition is not a function\n   * @throws {MissingExtendedDependencyError} If there was not a previously\n   *         defined dependency with that id\n   * @throws {IllegalExtensionError} If trying to extend a dependency\n   *         registered as value\n   */\n  extend: function(id, definition) {\n    return this._set(id, definition, undefined, true);\n  },\n\n  /**\n   * Internal dependency setter that adds extension support\n   *\n   * @private\n   * @param {string} id The dependency id\n   * @param {*|Function} value The dependency definition\n   * @param {string} 'VALUE', 'SINGLETON' or 'FACTORY'\n   * @param {boolean} isExtension Determines if extends a previous dependency,\n   *                              so the original value is stored and passed to\n   *                              the new definition\n   * @return {BlisterContainer} The container itself\n   */\n  _set: function(id, value, type, isExtension) {\n    if (typeof id !== 'string') {\n      throw new TypeError('The dependency id must be a string: ' + id);\n    }\n\n    var originalWrapper = isExtension ? this._deps[id] : undefined;\n    if (isExtension) {\n      if (!originalWrapper) {\n        throw new MissingExtendedDependencyError();\n      }\n      type = originalWrapper.type;\n    }\n\n    if (typeof value !== 'function' && type !== VALUE) {\n      throw new TypeError(\n        'The argument must be a function: ' +\n        value);\n    }\n\n    if (type === VALUE && isExtension) {\n      throw new IllegalExtensionError();\n    }\n\n    this._deps[id] = wrappers.create(type, value, this, originalWrapper);\n    return this;\n  },\n\n  /**\n   * Calls register on the given service provider to register its dependencies\n   * @param  {BlisterServiceProvider} provider\n   * @return {BlisterContainer} the container itself\n   */\n  register: function(provider) {\n    provider.register(this);\n    return this;\n  }\n\n};\n\n/**\n * Interface for service providers to use with BlisterContainer instances\n *\n * @interface BlisterServiceProvider\n *\n * @example\n *\n * // @implements {BlisterServiceProvider}\n * var provider = {\n *  register: function(container) {\n *    container.set('protocol', 'http://');\n *    container.set('host', 'example.com');\n *  }\n * };\n *\n * var container = new BlisterContainer();\n * container.register(provider);\n */\n\n/**\n * @function\n * @name BlisterServiceProvider#register\n * @description Registers an indeterminate number of dependencies in the passed\n *              container\n * @param {BlisterContainer} container\n */\n\nmodule.exports = BlisterContainer;\n","'use strict';\n\n/**\n * Wrapper just to create new subclasses of Error without\n * executing its constructor (ES3-compatible)\n * @class\n * @private\n */\nfunction ErrorWrapper() {}\nErrorWrapper.prototype = Error.prototype;\n\n/**\n * @class\n * @extends {Error}\n * @param {string} [message='Values cannot be extended. Redefine them instead']\n * @private\n */\nfunction IllegalExtensionError(message) {\n  this.name = 'IllegalExtensionError';\n  this.message = message || 'Values cannot be extended. Redefine them instead';\n}\n\nIllegalExtensionError.prototype = new ErrorWrapper();\nIllegalExtensionError.constructor = IllegalExtensionError;\n\n/**\n * @class\n * @extends {Error}\n * @param {string} [message='Cannot extend a dependency not previously set']\n * @private\n */\nfunction MissingExtendedDependencyError(message) {\n  this.name = 'MissingExtendedDependencyError';\n  this.message = message || 'Cannot extend a dependency not previously set';\n}\n\nMissingExtendedDependencyError.prototype = new ErrorWrapper();\nMissingExtendedDependencyError.constructor = MissingExtendedDependencyError;\n\nmodule.exports = {\n  IllegalExtensionError: IllegalExtensionError,\n  MissingExtendedDependencyError: MissingExtendedDependencyError\n};\n","'use strict';\n\n/**\n * Wrapper functions to store the different types of dependencies in the\n * container\n * @private\n * @type {Object}\n */\nvar wrappers = {\n\n  /**\n   * Returns a wrapper for a VALUE dependency to be stored in the container\n   * @param {*} value\n   * @return {Function}\n   */\n  VALUE: function wrapValue(value) {\n    return function() {\n      return value;\n    };\n  },\n\n  /**\n   * Returns a wrapper for a FACTORY dependency to be stored in the container\n   * @param {Function} value The factory function\n   * @param {BlisterContainer} container\n   * @param {Function} [originalWrapper]\n   * @return {Function}\n   */\n  FACTORY: function wrapFactory(value, container, originalWrapper) {\n    return function() {\n      if (originalWrapper) {\n        return value.call(container, container, originalWrapper());\n      }\n      return value.call(container, container);\n    };\n  },\n\n  /**\n   * Returns a wrapper for a SINGLETON dependency to be stored in the container\n   * @param {Function} value The singleton generator function\n   * @param {BlisterContainer} container\n   * @param {Function} [originalWrapper]\n   * @return {Function}\n   */\n  SINGLETON: function wrapSingleton(value, container, originalWrapper) {\n    var cached = false;\n    var cachedValue;\n    return function() {\n      if (!cached) {\n        cached = true;\n        if (originalWrapper) {\n          cachedValue = value.call(container, container, originalWrapper());\n        } else {\n          cachedValue = value.call(container, container);\n        }\n        value = null;\n      }\n      return cachedValue;\n    };\n  },\n\n  /**\n   * Returns a wrapper for the given parameters\n   * @param  {BlisterDependencyType} type\n   * @param  {*|Function} value\n   * @param  {BlisterContainer} container\n   * @param  {Function} [originalWrapper]\n   * @return {Function}\n   */\n  create: function(type, value, container, originalWrapper) {\n    var wrapper = this[type](value, container, originalWrapper);\n    wrapper.type = type;\n    return wrapper;\n  }\n\n};\n\nmodule.exports = wrappers;\n"]}