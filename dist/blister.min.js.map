{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/blister.js","src/errors.js","src/wrappers.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Blister","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"checkId","id","TypeError","BlisterContainer","_deps","Object","create","_cache","wrappers","errors","IllegalExtensionError","UnregisteredDependencyError","UnregisteredExtendedDependencyError","VALUE","SINGLETON","FACTORY","prototype","constructor","has","keys","push","get","value","_set","factory","factoryFn","service","serviceFn","extend","definition","undefined","type","isExtension","originalWrapper","register","provider","createScope","scope","withScope","values","forEach","depId","ErrorWrapper","message","name","createServiceId","count","singleton","serviceId","container","wrapper"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar wrappers = require('./wrappers');\nvar errors = require('./errors');\n\nvar IllegalExtensionError = errors.IllegalExtensionError;\nvar UnregisteredDependencyError = errors.UnregisteredDependencyError;\nvar UnregisteredExtendedDependencyError = errors.UnregisteredExtendedDependencyError;\n\nvar VALUE = 'value';\nvar SINGLETON = 'singleton';\nvar FACTORY = 'factory';\n\n/**\n * @private\n * @param  {*} id\n * @throws {TypeError} If the passed id is not a string\n */\nfunction checkId(id) {\n  if (typeof id !== 'string') {\n    throw new TypeError('The dependency id must be a string: ' + id);\n  }\n}\n\n/**\n * Dependency injection container constructor\n *\n * @example\n * var container = new BlisterContainer();\n * container.value('id', 'value');\n * container.get('id'); //> 'value';\n *\n * @class\n */\nfunction BlisterContainer() {\n  this._deps = Object.create(null);\n  this._cache = Object.create(null);\n}\n\nBlisterContainer.IllegalExtensionError = IllegalExtensionError;\nBlisterContainer.UnregisteredDependencyError = UnregisteredDependencyError;\nBlisterContainer.UnregisteredExtendedDependencyError = UnregisteredExtendedDependencyError;\n\nBlisterContainer.prototype = {\n\n  constructor: BlisterContainer,\n\n  /**\n   * Indicates if there is a registered dependency with the given id\n   * @param  {string} id\n   * @return {boolean}\n   * @throws {TypeError} If the id is not a string\n   */\n  has: function(id) {\n    checkId(id);\n    return id in this._deps;\n  },\n\n  /**\n   * Returns a list with all the keys available in the container\n   * @return {string[]}\n   */\n  keys: function() {\n    var keys = [];\n    /* eslint guard-for-in: 0 */\n    for (var i in this._deps) {\n      keys.push(i);\n    }\n    return keys;\n  },\n\n  /**\n   * Returns the dependency set with the given id,\n   * or undefined if it is not present\n   * @param  {string} id\n   * @return {*}\n   */\n  get: function(id) {\n    checkId(id);\n\n    if (!this.has(id)) {\n      throw new UnregisteredDependencyError('Cannot get unregistered dependency ' + id);\n    }\n\n    return this._deps[id].call(this);\n  },\n\n  /**\n   * Registers the given value with the specified id\n   * @param  {string} id\n   * @param  {*} value\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   */\n  value: function(id, value) {\n    return this._set(id, value, VALUE, false);\n  },\n\n  /**\n   * Registers the given factory function with the specified id\n   * @param  {string} id\n   * @param  {Function} factoryFn\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If factoryFn is not a function\n   */\n  factory: function(id, factoryFn) {\n    return this._set(id, factoryFn, FACTORY, false);\n  },\n\n  /**\n   * Registers the given service function with the specified id\n   * @param  {string} id\n   * @param  {Function} serviceFn\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If serviceFn is not a function\n   */\n  service: function(id, serviceFn) {\n    return this._set(id, serviceFn, SINGLETON, false);\n  },\n\n  /**\n   * Extends a previously defined dependency with the same type:\n   * service or factory\n   * @param  {string} id\n   * @param  {Function} definition\n   * @return {BlisterContainer} this\n   * @throws {TypeError} If id is not a string\n   * @throws {TypeError} If definition is not a function\n   * @throws {UnregisteredExtendedDependencyError} If there was not a previously\n   *         defined dependency with that id\n   */\n  extend: function(id, definition) {\n    return this._set(id, definition, undefined, true);\n  },\n\n  /**\n   * Internal dependency setter that adds extension support\n   *\n   * @private\n   * @param {string} id The dependency id\n   * @param {*|Function} value The dependency definition\n   * @param {string} 'VALUE', 'SINGLETON' or 'FACTORY'\n   * @param {boolean} isExtension Determines if extends a previous dependency,\n   *                              so the original value is stored and passed to\n   *                              the new definition\n   * @return {BlisterContainer} The container itself\n   * @throws {TypeError} If the id is not a string\n   * @throws {TypeError} If value is not a function when the type is\n   *         'SINGLETON' or 'FACTORY'\n   * @throws {UnregisteredExtendedDependencyError} When trying to extend an\n   *         unregistered dependency\n   */\n  _set: function(id, value, type, isExtension) {\n    checkId(id);\n\n    var originalWrapper = isExtension ? this._deps[id] : undefined;\n    if (isExtension) {\n      if (!originalWrapper) {\n        throw new UnregisteredExtendedDependencyError();\n      }\n\n      /* eslint no-param-reassign: 0 */\n      type = originalWrapper.type;\n      if (type === VALUE) {\n        type = SINGLETON;\n      }\n    }\n\n    if (typeof value !== 'function' && (isExtension || type !== VALUE)) {\n      throw new TypeError('The argument must be a function: ' + value);\n    }\n\n    this._deps[id] = wrappers.create(type, value, originalWrapper);\n    return this;\n  },\n\n  /**\n   * Calls register on the given service provider to register its dependencies\n   * @param  {BlisterServiceProvider} provider\n   * @return {BlisterContainer} the container itself\n   */\n  register: function(provider) {\n    if (typeof provider === 'function') {\n      provider(this);\n    } else {\n      provider.register(this);\n    }\n    return this;\n  },\n\n  /**\n   * Creates a new scope for the current dependency injection container.\n   * A scope inherits all the dependencies of its parent container and can\n   * define its own dependencies that shadow the ones of the container.\n   * @return {BlisterContainer}\n   */\n  createScope: function() {\n    var scope = new BlisterContainer();\n    scope._deps = Object.create(this._deps);\n    return scope;\n  },\n\n  /**\n   * Creates a new scope with the contents of the given object registered as\n   * value dependencies\n   * @param  {Object.<string,*>} values\n   * @return {BlisterContainer}\n   */\n  withScope: function(values) {\n    var scope = this.createScope();\n    Object.keys(values).forEach(function(depId) {\n      scope.value(depId, values[depId]);\n    });\n    return scope;\n  }\n\n};\n\n/**\n * Interface for service providers to use with BlisterContainer instances\n *\n * @interface BlisterServiceProvider\n *\n * @example\n *\n * // @implements {BlisterServiceProvider}\n * var provider = {\n *  register: function(container) {\n *    container.set('protocol', 'http://');\n *    container.set('host', 'example.com');\n *  }\n * };\n *\n * var container = new BlisterContainer();\n * container.register(provider);\n */\n\n/**\n * @function\n * @name BlisterServiceProvider#register\n * @description Registers an indeterminate number of dependencies in the passed\n *              container\n * @param {BlisterContainer} container\n */\n\nmodule.exports = BlisterContainer;\n","'use strict';\n\n/**\n * Wrapper just to create new subclasses of Error without\n * executing its constructor (ES3-compatible)\n * @class\n * @private\n */\nfunction ErrorWrapper() {}\nErrorWrapper.prototype = Error.prototype;\n\n/**\n * @class\n * @extends {Error}\n * @param {string} [message='Values cannot be extended. Redefine them instead']\n * @private\n */\nfunction IllegalExtensionError(message) {\n  this.name = 'IllegalExtensionError';\n  this.message = message || 'Values cannot be extended. Redefine them instead';\n}\n\nIllegalExtensionError.prototype = new ErrorWrapper();\nIllegalExtensionError.constructor = IllegalExtensionError;\n\n/**\n * @class\n * @extends {Error}\n * @param {string} [message='Cannot get an unregistered dependency']\n * @private\n */\nfunction UnregisteredDependencyError(message) {\n  this.name = 'UnregisteredDependencyError';\n  this.message = message || 'Cannot get an unregistered dependency';\n}\n\nUnregisteredDependencyError.prototype = new ErrorWrapper();\nUnregisteredDependencyError.constructor = UnregisteredDependencyError;\n\n/**\n * @class\n * @extends {Error}\n * @param {string} [message='Cannot extend a dependency not previously set']\n * @private\n */\nfunction UnregisteredExtendedDependencyError(message) {\n  this.name = 'UnregisteredExtendedDependencyError';\n  this.message = message || 'Cannot extend a dependency not previously set';\n}\n\nUnregisteredExtendedDependencyError.prototype = new ErrorWrapper();\nUnregisteredExtendedDependencyError.constructor = UnregisteredExtendedDependencyError;\n\nmodule.exports = {\n  IllegalExtensionError: IllegalExtensionError,\n  UnregisteredDependencyError: UnregisteredDependencyError,\n  UnregisteredExtendedDependencyError: UnregisteredExtendedDependencyError\n};\n","'use strict';\n\nvar count = 0;\n\n/**\n * Creates a process-wide unique service id\n * @private\n * @return {string}\n */\nfunction createServiceId() {\n  count++;\n  return 'service-' + count;\n}\n\n/**\n * Wrapper functions to store the different types of dependencies in the\n * container\n * @private\n * @type {Object}\n */\nvar wrappers = {\n\n  /**\n   * Returns a wrapper for a value dependency to be stored in the container\n   * @param {*} value\n   * @return {Function}\n   */\n  value: function wrapValue(value) {\n    return function() {\n      return value;\n    };\n  },\n\n  /**\n   * Returns a wrapper for a factory dependency to be stored in the container\n   * @param {Function} value The factory function\n   * @param {Function} [originalWrapper]\n   * @return {Function}\n   */\n  factory: function wrapFactory(value, originalWrapper) {\n    return function() {\n      if (originalWrapper) {\n        return value.call(this, originalWrapper.call(this), this);\n      }\n      return value.call(this, this);\n    };\n  },\n\n  /**\n   * Returns a wrapper for a singleton dependency to be stored in the container\n   * @param {Function} value The singleton generator function\n   * @param {BlisterContainer} container\n   * @param {Function} [originalWrapper]\n   * @return {Function}\n   */\n  singleton: function wrapSingleton(value, originalWrapper) {\n    var serviceId = createServiceId();\n    return function() {\n      var service = this._cache[serviceId];\n      if (!service) {\n        if (originalWrapper) {\n          service = value.call(this, originalWrapper.call(this), this);\n        } else {\n          service = value.call(this, this);\n        }\n        this._cache[serviceId] = service;\n      }\n      return service;\n    };\n  },\n\n  /**\n   * Returns a wrapper for the given parameters\n   * @param  {BlisterDependencyType} type\n   * @param  {*|Function} value\n   * @param  {BlisterContainer} container\n   * @param  {Function} [originalWrapper]\n   * @return {Function}\n   */\n  create: function(type, value, container, originalWrapper) {\n    var wrapper = this[type](value, container, originalWrapper);\n    wrapper.type = type;\n    return wrapper;\n  }\n\n};\n\nmodule.exports = wrappers;\n"]}