{"version":3,"file":"generated.js","sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/blister.js","src/errors.js","src/wrappers.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Blister","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"hasOwnProp","obj","name","objectHasProp","checkId","id","TypeError","BlisterContainer","_deps","wrappers","errors","IllegalExtensionError","UnregisteredDependencyError","UnregisteredExtendedDependencyError","VALUE","SINGLETON","FACTORY","Object","prototype","hasOwnProperty","constructor","has","get","value","_set","factory","factoryFn","service","serviceFn","extend","definition","undefined","type","isExtension","originalWrapper","create","register","provider","ErrorWrapper","message","container","singleton","cachedValue","cached","wrapper"],"mappings":"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":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\r\n\r\nvar wrappers = require('./wrappers');\r\nvar errors = require('./errors');\r\n\r\nvar IllegalExtensionError = errors.IllegalExtensionError;\r\nvar UnregisteredDependencyError = errors.UnregisteredDependencyError;\r\nvar UnregisteredExtendedDependencyError = errors.UnregisteredExtendedDependencyError;\r\n\r\nvar VALUE = 'value';\r\nvar SINGLETON = 'singleton';\r\nvar FACTORY = 'factory';\r\n\r\nvar objectHasProp = Object.prototype.hasOwnProperty;\r\n\r\n/**\r\n * Indicates if the given object has the given propery name as own\r\n * @private\r\n * @param  {Object} object\r\n * @param  {string} name\r\n * @return {boolean}\r\n */\r\nfunction hasOwnProp(obj, name) {\r\n  return objectHasProp.call(obj, name);\r\n}\r\n\r\n/**\r\n * @private\r\n * @param  {*} id\r\n * @throws {TypeError} If the passed id is not a string\r\n */\r\nfunction checkId(id) {\r\n  if (typeof id !== 'string') {\r\n    throw new TypeError('The dependency id must be a string: ' + id);\r\n  }\r\n}\r\n\r\n/**\r\n * Dependency injection container constructor\r\n *\r\n * @example\r\n * var container = new BlisterContainer();\r\n * container.value('id', 'value');\r\n * container.get('id'); //> 'value';\r\n *\r\n * @class\r\n */\r\nfunction BlisterContainer() {\r\n  this._deps = {};\r\n}\r\n\r\nBlisterContainer.IllegalExtensionError = IllegalExtensionError;\r\nBlisterContainer.UnregisteredDependencyError = UnregisteredDependencyError;\r\nBlisterContainer.UnregisteredExtendedDependencyError = UnregisteredExtendedDependencyError;\r\n\r\nBlisterContainer.prototype = {\r\n\r\n  constructor: BlisterContainer,\r\n\r\n  /**\r\n   * Indicates if there is a registered dependency with the given id\r\n   * @param  {string} id\r\n   * @return {boolean}\r\n   * @throws {TypeError} If the id is not a string\r\n   */\r\n  has: function(id) {\r\n    checkId(id);\r\n\r\n    return hasOwnProp(this._deps, id);\r\n  },\r\n\r\n  /**\r\n   * Returns the dependency set with the given id,\r\n   * or undefined if it is not present\r\n   * @param  {string} id\r\n   * @return {*}\r\n   */\r\n  get: function(id) {\r\n    checkId(id);\r\n\r\n    if (!hasOwnProp(this._deps, id)) {\r\n      throw new UnregisteredDependencyError('Cannot get unregistered dependency ' + id);\r\n    }\r\n\r\n    return this._deps[id]();\r\n  },\r\n\r\n  /**\r\n   * Registers the given value with the specified id\r\n   * @param  {string} id\r\n   * @param  {*} value\r\n   * @return {BlisterContainer} this\r\n   * @throws {TypeError} If id is not a string\r\n   */\r\n  value: function(id, value) {\r\n    return this._set(id, value, VALUE, false);\r\n  },\r\n\r\n  /**\r\n   * Registers the given factory function with the specified id\r\n   * @param  {string} id\r\n   * @param  {Function} factoryFn\r\n   * @return {BlisterContainer} this\r\n   * @throws {TypeError} If id is not a string\r\n   * @throws {TypeError} If factoryFn is not a function\r\n   */\r\n  factory: function(id, factoryFn) {\r\n    return this._set(id, factoryFn, FACTORY, false);\r\n  },\r\n\r\n  /**\r\n   * Registers the given service function with the specified id\r\n   * @param  {string} id\r\n   * @param  {Function} serviceFn\r\n   * @return {BlisterContainer} this\r\n   * @throws {TypeError} If id is not a string\r\n   * @throws {TypeError} If serviceFn is not a function\r\n   */\r\n  service: function(id, serviceFn) {\r\n    return this._set(id, serviceFn, SINGLETON, false);\r\n  },\r\n\r\n  /**\r\n   * Extends a previously defined dependency with the same type:\r\n   * service or factory\r\n   * @param  {string} id\r\n   * @param  {Function} definition\r\n   * @return {BlisterContainer} this\r\n   * @throws {TypeError} If id is not a string\r\n   * @throws {TypeError} If definition is not a function\r\n   * @throws {UnregisteredExtendedDependencyError} If there was not a previously\r\n   *         defined dependency with that id\r\n   */\r\n  extend: function(id, definition) {\r\n    return this._set(id, definition, undefined, true);\r\n  },\r\n\r\n  /**\r\n   * Internal dependency setter that adds extension support\r\n   *\r\n   * @private\r\n   * @param {string} id The dependency id\r\n   * @param {*|Function} value The dependency definition\r\n   * @param {string} 'VALUE', 'SINGLETON' or 'FACTORY'\r\n   * @param {boolean} isExtension Determines if extends a previous dependency,\r\n   *                              so the original value is stored and passed to\r\n   *                              the new definition\r\n   * @return {BlisterContainer} The container itself\r\n   * @throws {TypeError} If the id is not a string\r\n   * @throws {TypeError} If value is not a function when the type is\r\n   *         'SINGLETON' or 'FACTORY'\r\n   * @throws {UnregisteredExtendedDependencyError} When trying to extend an\r\n   *         unregistered dependency\r\n   */\r\n  _set: function(id, value, type, isExtension) {\r\n    checkId(id);\r\n\r\n    var originalWrapper = isExtension ? this._deps[id] : undefined;\r\n    if (isExtension) {\r\n      if (!originalWrapper) {\r\n        throw new UnregisteredExtendedDependencyError();\r\n      }\r\n\r\n      type = originalWrapper.type;\r\n      if (type === VALUE) {\r\n        type = SINGLETON;\r\n      }\r\n    }\r\n\r\n    if (typeof value !== 'function' && (isExtension || type !== VALUE)) {\r\n      throw new TypeError('The argument must be a function: ' + value);\r\n    }\r\n\r\n    this._deps[id] = wrappers.create(type, value, this, originalWrapper);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Calls register on the given service provider to register its dependencies\r\n   * @param  {BlisterServiceProvider} provider\r\n   * @return {BlisterContainer} the container itself\r\n   */\r\n  register: function(provider) {\r\n    provider.register(this);\r\n    return this;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * Interface for service providers to use with BlisterContainer instances\r\n *\r\n * @interface BlisterServiceProvider\r\n *\r\n * @example\r\n *\r\n * // @implements {BlisterServiceProvider}\r\n * var provider = {\r\n *  register: function(container) {\r\n *    container.set('protocol', 'http://');\r\n *    container.set('host', 'example.com');\r\n *  }\r\n * };\r\n *\r\n * var container = new BlisterContainer();\r\n * container.register(provider);\r\n */\r\n\r\n/**\r\n * @function\r\n * @name BlisterServiceProvider#register\r\n * @description Registers an indeterminate number of dependencies in the passed\r\n *              container\r\n * @param {BlisterContainer} container\r\n */\r\n\r\nmodule.exports = BlisterContainer;\r\n","'use strict';\r\n\r\n/**\r\n * Wrapper just to create new subclasses of Error without\r\n * executing its constructor (ES3-compatible)\r\n * @class\r\n * @private\r\n */\r\nfunction ErrorWrapper() {}\r\nErrorWrapper.prototype = Error.prototype;\r\n\r\n/**\r\n * @class\r\n * @extends {Error}\r\n * @param {string} [message='Values cannot be extended. Redefine them instead']\r\n * @private\r\n */\r\nfunction IllegalExtensionError(message) {\r\n  this.name = 'IllegalExtensionError';\r\n  this.message = message || 'Values cannot be extended. Redefine them instead';\r\n}\r\n\r\nIllegalExtensionError.prototype = new ErrorWrapper();\r\nIllegalExtensionError.constructor = IllegalExtensionError;\r\n\r\n/**\r\n * @class\r\n * @extends {Error}\r\n * @param {string} [message='Cannot get an unregistered dependency']\r\n * @private\r\n */\r\nfunction UnregisteredDependencyError(message) {\r\n  this.name = 'UnregisteredDependencyError';\r\n  this.message = message || 'Cannot get an unregistered dependency';\r\n}\r\n\r\nUnregisteredDependencyError.prototype = new ErrorWrapper();\r\nUnregisteredDependencyError.constructor = UnregisteredDependencyError;\r\n\r\n/**\r\n * @class\r\n * @extends {Error}\r\n * @param {string} [message='Cannot extend a dependency not previously set']\r\n * @private\r\n */\r\nfunction UnregisteredExtendedDependencyError(message) {\r\n  this.name = 'UnregisteredExtendedDependencyError';\r\n  this.message = message || 'Cannot extend a dependency not previously set';\r\n}\r\n\r\nUnregisteredExtendedDependencyError.prototype = new ErrorWrapper();\r\nUnregisteredExtendedDependencyError.constructor = UnregisteredExtendedDependencyError;\r\n\r\nmodule.exports = {\r\n  IllegalExtensionError: IllegalExtensionError,\r\n  UnregisteredDependencyError: UnregisteredDependencyError,\r\n  UnregisteredExtendedDependencyError: UnregisteredExtendedDependencyError\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Wrapper functions to store the different types of dependencies in the\r\n * container\r\n * @private\r\n * @type {Object}\r\n */\r\nvar wrappers = {\r\n\r\n  /**\r\n   * Returns a wrapper for a value dependency to be stored in the container\r\n   * @param {*} value\r\n   * @return {Function}\r\n   */\r\n  value: function wrapValue(value) {\r\n    return function() {\r\n      return value;\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns a wrapper for a factory dependency to be stored in the container\r\n   * @param {Function} value The factory function\r\n   * @param {BlisterContainer} container\r\n   * @param {Function} [originalWrapper]\r\n   * @return {Function}\r\n   */\r\n  factory: function wrapFactory(value, container, originalWrapper) {\r\n    return function() {\r\n      if (originalWrapper) {\r\n        return value.call(container, originalWrapper(), container);\r\n      }\r\n      return value.call(container, container);\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns a wrapper for a singleton dependency to be stored in the container\r\n   * @param {Function} value The singleton generator function\r\n   * @param {BlisterContainer} container\r\n   * @param {Function} [originalWrapper]\r\n   * @return {Function}\r\n   */\r\n  singleton: function wrapSingleton(value, container, originalWrapper) {\r\n    var cached = false;\r\n    var cachedValue;\r\n    return function() {\r\n      if (!cached) {\r\n        if (originalWrapper) {\r\n          cachedValue = value.call(container, originalWrapper(), container);\r\n        } else {\r\n          cachedValue = value.call(container, container);\r\n        }\r\n        cached = true;\r\n        value = null;\r\n      }\r\n      return cachedValue;\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Returns a wrapper for the given parameters\r\n   * @param  {BlisterDependencyType} type\r\n   * @param  {*|Function} value\r\n   * @param  {BlisterContainer} container\r\n   * @param  {Function} [originalWrapper]\r\n   * @return {Function}\r\n   */\r\n  create: function(type, value, container, originalWrapper) {\r\n    var wrapper = this[type](value, container, originalWrapper);\r\n    wrapper.type = type;\r\n    return wrapper;\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = wrappers;\r\n"]}